# Utiliser une image officielle PHP avec Apache
FROM php:8.2-apache

# Installer les extensions PHP nécessaires et d'autres dépendances
RUN apt-get update && \
    apt-get install -y libzip-dev unzip git && \
    docker-php-ext-install pdo pdo_mysql zip

# Installer Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Définir le répertoire de travail
WORKDIR /var/www/html

# Copier les fichiers de l'application dans le conteneur
COPY backend/ /var/www/html

# Assurer que le fichier artisan est exécutable
RUN chmod +x /var/www/html/artisan

# Assurer que les permissions sont correctes sur les répertoires de stockage et cache
RUN chown -R www-data:www-data /var/www/html/storage /var/www/html/bootstrap/cache

# Installer les dépendances PHP avec Composer (avec logs détaillés)
RUN composer install --verbose --no-dev --optimize-autoloader

# Créer un lien symbolique pour le répertoire de stockage
RUN php artisan storage:link

# Assurer que les permissions du répertoire de stockage et des liens symboliques sont correctes
RUN chown -R www-data:www-data /var/www/html/storage /var/www/html/public/storage

# Activer les modules Apache nécessaires
RUN a2enmod rewrite

# Configurer Apache pour permettre les réécritures
COPY backend/apache/laravel.conf /etc/apache2/sites-available/000-default.conf

# Assurer les permissions correctes pour Apache
RUN chown -R www-data:www-data /var/www/html && chmod -R 775 /var/www/html/storage /var/www/html/bootstrap/cache

# Exposer le port 80 pour Apache
EXPOSE 80

# Commande d'initialisation avant le démarrage du serveur
CMD php artisan migrate --force && \
    apache2-foreground
